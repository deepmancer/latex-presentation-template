name: Process PDF on Push

on:
  push:
    paths:
      - main.pdf

jobs:
  extract-pdf-pages:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y poppler-utils
        python -m pip install --upgrade pip
        pip install pdf2image

    - name: Check for main.pdf
      run: |
        if [ ! -f "main.pdf" ]; then
          echo "Error: main.pdf not found."
          exit 1
        fi

    - name: Extract Pages from PDF and Save as PNG
      run: |
        python - <<EOF
        import os
        from pdf2image import convert_from_path

        def extract_page_as_image():
            pdf_path = "main.pdf"
            output_folder = "assets/samples"
            # Verify if the file exists
            if not os.path.isfile(pdf_path):
                raise FileNotFoundError(f"The file {pdf_path} does not exist.")

            # Create the output folder if it does not exist
            if not os.path.isdir(output_folder):
                os.makedirs(output_folder, exist_ok=True)

            if num_pages == 0:
                raise ValueError("The PDF has no pages.")

            # Convert the first page
            titlepage_images = convert_from_path(pdf_path, first_page=1, last_page=1)
            titlepage_image = titlepage_images[0]
            titlepage_image_path = os.path.join(output_folder, "titlepage.png")
            titlepage_image.save(titlepage_image_path, "PNG")

            # Convert the last page
            references_images = convert_from_path(pdf_path, first_page=num_pages, last_page=num_pages)
            references_image = references_images[0]
            references_image_path = os.path.join(output_folder, "references.png")
            references_image.save(references_image_path, "PNG")

            # Convert the second page
            content_images = convert_from_path(pdf_path, first_page=2, last_page=2)
            content_image = content_images[0]
            content_image_path = os.path.join(output_folder, "content.png")
            content_image.save(content_image_path, "PNG")

        extract_page_as_image()
        EOF

    - name: Commit and Push PNG Files
      run: |
        git config --local user.name "GitHub Actions"
        git config --local user.email "actions@github.com"
        git add assets/samples/*.png
        git commit -m "Add extracted PNG files from main.pdf" || echo "No changes to commit"
        git push
